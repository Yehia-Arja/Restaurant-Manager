name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - production

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare Docker layer cache dir
        run: mkdir -p /tmp/.buildx-cache

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Images
        working-directory: smartDine-server
        run: docker compose --progress=plain build --pull

  test:
    name: Run Laravel Tests Inside Container
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start containers
        working-directory: smartDine-server
        run: docker compose up -d --remove-orphans --wait

      - name: Run migrations inside container
        working-directory: smartDine-server
        run: docker compose exec -T laravel php artisan migrate --force

      - name: Run tests inside container
        working-directory: smartDine-server
        run: docker compose exec -T laravel php artisan test --verbose

  deploy-staging:
    name: Deploy to Staging EC2
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    env:
      EC2_HOST: ${{ secrets.EC2_STAGING_HOST }}
      BRANCH: main

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_DEPLOY_KEY }}

      - name: Deploy via SSH to Staging
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@"${EC2_HOST}" << 'EOF'
            cd ~/Restaurant-Manager/smartDine-server
            git pull origin "${BRANCH}"
            docker compose down
            docker compose up -d --build
          EOF

  deploy-production:
    name: Deploy to Production EC2
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/production'
    env:
      EC2_HOST: ${{ secrets.EC2_PRODUCTION_HOST }}
      BRANCH: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_DEPLOY_KEY }}

      - name: Deploy via SSH to Production
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@"${EC2_HOST}" << 'EOF'
            cd ~/Restaurant-Manager/smartDine-server
            git pull origin "${BRANCH}"
            docker compose down
            docker compose up -d --build
          EOF
