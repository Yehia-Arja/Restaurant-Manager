name: Push and Run

on:
  push:
    branches:
      - main
      - production

jobs:
  Build-Test-Push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Laravel image
        run: docker build -t yehiaarja/dockersmartdine:latest ./smartDine-server

      - name: Build WebSocket image
        run: docker build -t yehiaarja/smartdine-ws:latest ./smartDine-ws-server

      - name: Start services
        run: docker compose -f ./docker-compose.yml up -d

      - name: Wait for DB to be ready
        run: |
          until docker exec smartdine-server-database-2 mysql -uroot -p1234 -e "select 1"; do
            echo "Waiting for DB..."; sleep 2;
          done

      - name: Run migrations
        run: docker compose -f ./docker-compose.yml exec server php artisan migrate --force

      - name: Run tests
        run: docker compose -f ./docker-compose.yml exec server php artisan test

      - name: Push Laravel image
        run: docker push yehiaarja/dockersmartdine:latest

      - name: Push WebSocket image
        run: docker push yehiaarja/smartdine-ws:latest

  Deploy-Staging:
    if: github.ref_name == 'main'
    needs: Build-Test-Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy project to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.STAGING_DEPLOY_HOST }}
          username: ${{ secrets.STAGING_EC2_USER }}
          key: ${{ secrets.STAGING_EC2_KEY }}
          source: "smartDine-server smartDine-ws-server docker-compose.yml"
          target: "/home/${{ secrets.STAGING_EC2_USER }}/smartdine-deploy"

      - name: SSH and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.STAGING_DEPLOY_HOST }}
          username: ${{ secrets.STAGING_EC2_USER }}
          key: ${{ secrets.STAGING_EC2_KEY }}
          script: |
            cd /home/${{ secrets.STAGING_EC2_USER }}
            sudo docker compose -f ./docker-compose.yml down
            sudo docker rmi yehiaarja/dockersmartdine:latest || true
            sudo docker rmi yehiaarja/smartdine-ws:latest || true
            sudo docker compose -f ./docker-compose.yml pull
            sudo docker compose -f ./docker-compose.yml up -d

  Deploy-Production:
    if: github.ref_name == 'production'
    needs: Build-Test-Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy project to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          username: ${{ secrets.PROD_EC2_USER }}
          key: ${{ secrets.PROD_EC2_KEY }}
          source: "smartDine-server smartDine-ws-server docker-compose.yml"
          target: "/home/${{ secrets.PROD_EC2_USER }}/smartdine-deploy"

      - name: SSH and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          username: ${{ secrets.PROD_EC2_USER }}
          key: ${{ secrets.PROD_EC2_KEY }}
          script: |
            cd /home/${{ secrets.PROD_EC2_USER }}
            sudo docker compose -f ./docker-compose.yml down
            sudo docker rmi yehiaarja/dockersmartdine:latest || true
            sudo docker rmi yehiaarja/smartdine-ws:latest || true
            sudo docker compose -f ./docker-compose.yml pull
            sudo docker compose -f ./docker-compose.yml up -d
