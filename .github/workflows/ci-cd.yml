name: Push and Run

on:
  push:
    branches:
      - main
      - production

jobs:
  Build-Test-Push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./smartDine-server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Laravel image
        run: docker build -t yehiaarja/dockersmartdine:latest .

      - name: Start services
        run: docker compose up -d --wait

      - name: Show .env inside Laravel container
        run: docker compose exec server cat .env

      - name: Wait for Laravel to connect to DB
        run: |
          echo "Waiting for Laravel DB connection..."
          for i in $(seq 1 30); do
            echo "Attempt $i..."
            if docker compose exec server php artisan migrate:status; then
              echo "Laravel can talk to the DB"
              break
            fi
            echo "Still waiting... ($i/30)"
            sleep 2
            if [ $i -eq 30 ]; then
              echo "Laravel could not connect to DB in time"
              docker compose logs database
              exit 1
            fi
          done

      - name: Clear Laravel config cache
        run: docker compose exec server php artisan config:clear

      - name: Rebuild Laravel config cache
        run: docker compose exec server php artisan config:cache

      - name: Run migrations
        run: docker compose exec server php artisan migrate --force

      - name: Run tests
        run: docker compose exec server php artisan test

      - name: Push Laravel Docker image
        run: docker push yehiaarja/dockersmartdine:latest

  Deploy-Staging:
    if: github.ref_name == 'main'
    needs: Build-Test-Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to EC2 (Staging)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.STAGING_DEPLOY_HOST }}
          username: ${{ secrets.STAGING_EC2_USER }}
          key: ${{ secrets.STAGING_EC2_KEY }}
          source: "smartDine-server/docker-compose.yml"
          target: "/home/${{ secrets.STAGING_EC2_USER }}"

      - name: SSH and Deploy to EC2 (Staging)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.STAGING_DEPLOY_HOST }}
          username: ${{ secrets.STAGING_EC2_USER }}
          key: ${{ secrets.STAGING_EC2_KEY }}
          script: |
            cd /home/${{ secrets.STAGING_EC2_USER }}/smartDine-server
            sudo docker-compose down
            sudo docker rmi yehiaarja/dockersmartdine:latest || true
            sudo docker-compose pull
            sudo docker-compose up -d

  Deploy-Production:
    if: github.ref_name == 'production'
    needs: Build-Test-Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to EC2 (Production)
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          username: ${{ secrets.PROD_EC2_USER }}
          key: ${{ secrets.PROD_EC2_KEY }}
          source: "smartDine-server/docker-compose.yml"
          target: "/home/${{ secrets.PROD_EC2_USER }}"

      - name: SSH and Deploy to EC2 (Production)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_DEPLOY_HOST }}
          username: ${{ secrets.PROD_EC2_USER }}
          key: ${{ secrets.PROD_EC2_KEY }}
          script: |
            cd /home/${{ secrets.PROD_EC2_USER }}/smartDine-server
            sudo docker-compose down
            sudo docker rmi yehiaarja/dockersmartdine:latest || true
            sudo docker-compose pull
            sudo docker-compose up -d
