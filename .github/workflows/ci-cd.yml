name: Push and Run

on:
  push:
    branches:
      - main
      - production

jobs:
  Build-Test-Push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./smartDine-server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set ENV Secrets Based on Branch
        id: set_secrets
        run: |
          if [[ "${{ github.ref_name }}" == "production" ]]; then
            echo "DEPLOY_HOST=${{ secrets.PROD_DEPLOY_HOST }}" >> $GITHUB_ENV
            echo "EC2_USER=${{ secrets.PROD_EC2_USER }}" >> $GITHUB_ENV
            echo "EC2_KEY=${{ secrets.PROD_EC2_KEY }}" >> $GITHUB_ENV
            echo "DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
            echo "DOCKER_KEY=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV
          else
            echo "DEPLOY_HOST=${{ secrets.STAGING_DEPLOY_HOST }}" >> $GITHUB_ENV
            echo "EC2_USER=${{ secrets.STAGING_EC2_USER }}" >> $GITHUB_ENV
            echo "EC2_KEY=${{ secrets.STAGING_EC2_KEY }}" >> $GITHUB_ENV
            echo "DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
            echo "DOCKER_KEY=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_KEY }}

      - name: Build Laravel image
        run: docker build -t yehiaarja/dockersmartdine:latest .

      - name: Start services
        run: docker compose up -d

      - name: Wait for DB to be ready
        run: |
          until docker exec database mysql -uroot -p1234 -e "select 1"; do
            echo "Waiting for DB..."; sleep 2;
          done

      - name: Run migrations
        run: docker compose exec server php artisan migrate --force

      - name: Run tests
        run: docker compose exec server php artisan test

      - name: Push Laravel Docker image
        run: docker push yehiaarja/dockersmartdine:latest

  Copy-docker-compose-to-EC2:
    needs: Build-Test-Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          source: "smartDine-server/docker-compose.yml"
          target: "/home/${{ env.EC2_USER }}"

  Deploy-Laravel-Docker:
    needs: Copy-docker-compose-to-EC2
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SSH and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            cd /home/${{ env.EC2_USER }}/smartDine-server
            sudo docker-compose down
            sudo docker rmi yehiaarja/dockersmartdine:latest || true
            sudo docker-compose pull
            sudo docker-compose up -d
