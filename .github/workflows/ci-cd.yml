name: Push and Run

on:
  push:
    branches:
      - main
      - production

jobs:
  Build-Test-Push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./smartDine-server

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Laravel image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:latest .

      - name: Start services
        run: docker compose up -d

      - name: Wait for DB to be ready
        run: |
          until docker exec smartdine-server-mysql_db-1 mysql -uroot -p1234 -e "select 1"; do
            echo "Waiting for DB..."; sleep 2;
          done

      - name: Run migrations
        run: docker exec smartdine-server-laravel-1 php artisan migrate --force

      - name: Run tests
        run: docker exec smartdine-server-laravel-1 php artisan test

      - name: Push Laravel Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:latest

  Copy-docker-compose-to-EC2:
    needs: Build-Test-Push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.STAGING_SERVER }}
          username: ubuntu
          key: ${{ secrets.SSH_STAGING_PRIVATE_KEY }}
          source: "smartDine-server/docker-compose.yml"
          target: "/home/ubuntu"

  Deploy-Staging:
    needs: Copy-docker-compose-to-EC2
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SSH and Deploy to Staging
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.STAGING_SERVER }}
          username: ubuntu
          key: ${{ secrets.SSH_STAGING_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/smartDine-server
            sudo docker-compose down
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:latest || true
            sudo docker-compose pull
            sudo docker-compose up -d

  Deploy-Production:
    needs: Build-Test-Push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: SSH and Deploy to Production
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PRODUCTION_SERVER }}
          username: ubuntu
          key: ${{ secrets.SSH_PRODUCTION_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/smartDine-server
            sudo docker-compose down
            sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:latest || true
            sudo docker-compose pull
            sudo docker-compose up -d
