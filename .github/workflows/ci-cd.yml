name: CI/CD Pipeline for SmartDine

on:
  push:
    branches:
      - main
      - production

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:${{ github.ref_name }} .
      - name: Push image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:${{ github.ref_name }}

  test:
    if: github.ref == 'refs/heads/main'
    needs: build-image
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
      - name: Install & setup Laravel
        run: |
          cp .env.testing .env
          composer install --no-interaction --prefer-dist
          php artisan key:generate
          php artisan migrate --force
      - name: Run tests
        run: php artisan test --verbose

  deploy-staging:
    if: github.ref == 'refs/heads/main'
    needs: [build-image, test]
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:${{ github.ref_name }}
            docker stop smartdine || true
            docker rm smartdine || true
            docker run -d \
              --name smartdine \
              -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:${{ github.ref_name }}

  deploy-production:
    if: github.ref == 'refs/heads/production'
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:${{ github.ref_name }}
            docker stop smartdine || true
            docker rm smartdine || true
            docker run -d \
              --name smartdine \
              -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME }}/smartdine:${{ github.ref_name }}
