name: CI/CD Pipeline for SmartDine

on:
  push:
    branches:
      - main
      - production

jobs:
  Build-Docker-Image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/smartdine:${{ github.ref_name }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/smartdine:${{ github.ref_name }}

  Run-Tests:
    if: github.ref == 'refs/heads/main'
    needs: Build-Docker-Image
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install & setup Laravel
        run: |
          cp .env.testing .env
          composer install --no-interaction
          php artisan key:generate
          php artisan migrate --force

      - name: Run tests
        run: php artisan test

  Deploy:
    needs: [Build-Docker-Image, Run-Tests]
    if: |
      (github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/production')
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.STAGING_HOST || secrets.PRODUCTION_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/smartdine:${{ github.ref_name }}
            docker stop smartdine || true
            docker rm smartdine || true
            docker run -d --name smartdine -p 80:80 ${{ secrets.DOCKER_USERNAME }}/smartdine:${{ github.ref_name }}
