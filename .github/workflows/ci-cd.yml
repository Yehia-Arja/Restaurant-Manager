name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - production

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

env:
  COMPOSER_NO_INTERACTION: 1
  COMPOSER_ALLOW_SUPERUSER: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/production'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push images
        working-directory: smartDine-server
        run: |
          docker compose build --pull --no-cache
          if [ "$GITHUB_REF" = "refs/heads/production" ]; then
            docker compose push
          fi

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: restaurant_db
          MYSQL_USER: laravel_user
          MYSQL_PASSWORD: laravel_pass
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping -h localhost -uroot -proot --silent" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:alpine
        ports:
          - "6379:6379"

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, xml, curl, bcmath, intl, redis, zip
          coverage: none

      - name: Copy .env & generate key
        working-directory: smartDine-server
        run: |
          cp .env.example .env
          sed -i "s/APP_KEY=/APP_KEY=${{ secrets.APP_KEY }}/" .env
          sed -i "s/DB_HOST=mysql/DB_HOST=127.0.0.1/" .env
          sed -i "s/REDIS_HOST=redis/REDIS_HOST=127.0.0.1/" .env
          php artisan key:generate --ansi

      - name: Install Composer dependencies
        working-directory: smartDine-server
        run: composer install --ansi --no-interaction --prefer-dist --optimize-autoloader

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; then
              echo "MySQL is ready"
              break
            fi
            echo "Waiting for MySQL... Attempt $i"
            sleep 2
          done

      - name: Run migrations
        working-directory: smartDine-server
        run: php artisan migrate --force

      - name: Run tests
        working-directory: smartDine-server
        run: php artisan test --verbose

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_DEPLOY_KEY }}

      - name: Deploy to staging
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_STAGING_HOST }} << 'EOF'
            cd ~/Restaurant-Manager/smartDine-server
            git pull origin main
            
            # Create or update .env
            cat > .env << 'EOT'
            APP_ENV=staging
            APP_KEY=${{ secrets.APP_KEY }}
            DB_CONNECTION=mysql
            DB_HOST=mysql
            DB_PORT=3306
            DB_DATABASE=restaurant_db
            DB_USERNAME=laravel_user
            DB_PASSWORD=laravel_pass
            CACHE_DRIVER=redis
            REDIS_HOST=redis
            REDIS_PORT=6379
            EOT

            docker compose down
            docker compose pull
            docker compose up -d --build --remove-orphans
          EOF

  deploy-production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/production'
    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_DEPLOY_KEY }}

      - name: Deploy to production
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PRODUCTION_HOST }} << 'EOF'
            cd ~/Restaurant-Manager/smartDine-server
            git pull origin production
            
            # Create or update .env
            cat > .env << 'EOT'
            APP_ENV=production
            APP_KEY=${{ secrets.APP_KEY }}
            DB_CONNECTION=mysql
            DB_HOST=mysql
            DB_PORT=3306
            DB_DATABASE=restaurant_db
            DB_USERNAME=laravel_user
            DB_PASSWORD=laravel_pass
            CACHE_DRIVER=redis
            REDIS_HOST=redis
            REDIS_PORT=6379
            EOT

            docker compose down
            docker compose pull
            docker compose up -d --build --remove-orphans
          EOF
