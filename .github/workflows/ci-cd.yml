name: CI/CD Pipeline

on:
  push:
    branches: [main, production]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-ready: true
    steps:
      - uses: actions/checkout@v3

      - name: Prepare buildx cache
        run: mkdir -p /tmp/.buildx-cache

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build images
        working-directory: smartDine-server
        run: docker compose build --pull --progress=plain

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Build images (for this runner)
        working-directory: smartDine-server
        run: docker compose build --pull

      - name: Copy .env & generate key
        working-directory: smartDine-server
        run: |
          cp .env.example .env
          docker compose run --rm laravel php artisan key:generate --ansi

      - name: Start services & wait
        working-directory: smartDine-server
        run: |
          docker compose up -d mysql redis laravel
          until docker compose exec -T mysql \
                mysqladmin ping -h localhost -uroot -proot --silent; do
            sleep 2
          done

      - name: Run migrations & tests
        working-directory: smartDine-server
        run: |
          docker compose exec -T laravel php artisan migrate --force
          docker compose exec -T laravel sh -c "php artisan test --verbose"

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_DEPLOY_KEY }}
      - name: Deploy to staging
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_STAGING_HOST }} <<'EOF'
            cd ~/Restaurant-Manager/smartDine-server

            # Re-create .env from secrets
            cat <<EOT > .env
            APP_ENV=staging
            APP_KEY=${{ secrets.APP_KEY }}
            DB_CONNECTION=mysql
            DB_HOST=mysql
            DB_PORT=3306
            DB_DATABASE=restaurant_db
            DB_USERNAME=laravel_user
            DB_PASSWORD=laravel_pass
            CACHE_DRIVER=redis
            REDIS_HOST=redis
            REDIS_PORT=6379
            EOT

            docker compose down
            docker compose up -d --build
          EOF

  deploy-production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/production'
    steps:
      - uses: actions/checkout@v3
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_DEPLOY_KEY }}
      - name: Deploy to production
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PRODUCTION_HOST }} <<'EOF'
            cd ~/Restaurant-Manager/smartDine-server

            # Re-create .env from secrets
            cat <<EOT > .env
            APP_ENV=production
            APP_KEY=${{ secrets.APP_KEY }}
            DB_CONNECTION=mysql
            DB_HOST=mysql
            DB_PORT=3306
            DB_DATABASE=restaurant_db
            DB_USERNAME=laravel_user
            DB_PASSWORD=laravel_pass
            CACHE_DRIVER=redis
            REDIS_HOST=redis
            REDIS_PORT=6379
            EOT

            docker compose down
            docker compose up -d --build
          EOF
